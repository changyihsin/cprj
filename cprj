#!/bin/bash
###################################################################

###################################################################
shopt -s -o nounset

declare -rx SCRIPT=${0##*/}
declare -r OPTSTRING="dt:i:x:f:p:"
declare SWITCH
# -d [type]
declare TYPE=""
# -i [file/folder that will be added into project]  
declare INCLUDES=""
INCLUDEPATHS=""
# -x [file/folder that will not be added into project]  
declare EXCLUDES="" 
EXCLUDEPATHS=""
# -f [filter type]
declare FILTERS=""
declare FILTERCOMMAND=""
declare debug=0

declare has_exclude=0
declare project="tmp"

###################################################################
function help {
  printf "help\n"
}

if [ $# -le 1 ] ; then 
  help
fi

EMPTY1=""
EMPTY2=""
EMPTY3=""
while getopts "$OPTSTRING" SWITCH  ; do 
  case $SWITCH in
  t)TYPE=$OPTARG
    ;;
  i)INCLUDES="$INCLUDES""$EMPTY1""$OPTARG"
    EMPTY1=" "
    ;;
  x)EXCLUDES="$EXCLUDES""$EMPTY2""$OPTARG"
    EMPTY2=" "
    has_exclude=1	
    ;;
  f)FILTERS="$FILTERS""$EMPTY3""$OPTARG"
    EMPTY3=" "
    ;;  
  p)project=$OPTARG
    ;;
  d)echo "Turn on debug mode"
    debug=1;	
    ;;
  *)printf "unsupported function" 
    ;;
  esac
done

export PROJECT_HOME="$PWD"
AND=""
STAR="*"
for exclude in ${EXCLUDES} ; do
  EXCLUDEPATHS="${EXCLUDEPATHS}${AND} ! -path ${PROJECT_HOME}/\"${exclude}*\""
  AND=" -a "
done

AND=""
for filter in ${FILTERS} ; do
  echo ${filter}
  FILTERCOMMAND="${FILTERCOMMAND}${AND} -name \"${filter}\""
  AND=" -a "
done

if [ $has_exclude -eq 1 ] ; then 
cmd="find ${PROJECT_HOME} ${EXCLUDEPATHS} -a -name \"*.c\" -o -name \"*.h\" -o -name \"*.cpp\" -o -name \"*.s\" -o -name \"*.S\" -o -name \"*.js\" > ${project}.file"
else
cmd="find ${PROJECT_HOME} -name \"*.c\" -o -name \"*.h\" -o -name \"*.cpp\" -o -name \"*.s\" -o -name \"*.S\" -o -name \"*.js\" > ${project}.file"
fi

echo "$cmd"

if [ $debug -eq 1 ]; then 
  echo "======================================================"
  echo "$cmd"
  echo "======================================================"
  echo "$EXCLUDEPATHS"
#  echo "======================================================"
#  echo "$FILTERCOMMAND"
#  echo "======================================================"
#  echo "$TYPES"
  echo "======================================================"
fi 

eval ${cmd}

#find $PROJECT_HOME -name "*.c" -o -name "*.h"  -o -name "*.cpp" -o -name "*.js" -o -name "*.s" -o -name "*.S" > mozilla-central.files
#if [ $#  -gt  1 ] ; then
#find $2 -name "*.c" -o -name "*.h"  -o -name "*.cpp" -o -name "*.js" -o -name "*.s" -o -name "*.S" >> mozilla-central.files
#fi

#LNX=/home/jru/linux-2.4.18
#cd / 	
#find  $LNX                                                                \
#	-path "$LNX/arch/*" ! -path "$LNX/arch/i386*" -prune -o               \
#	-path "$LNX/include/asm-*" ! -path "$LNX/include/asm-i386*" -prune -o \
#	-path "$LNX/tmp*" -prune -o                                           \
#	-path "$LNX/Documentation*" -prune -o                                 \
#	-path "$LNX/scripts*" -prune -o                                       \
#	-path "$LNX/drivers*" -prune -o                                       \
#        -name "*.[chxsS]" -print >/home/jru/cscope/cscope.files
#
ctags -R -L ${project}.file -f ${project}.tags
cp ${project}.tags tags
#
cscope -bk -i ${project}.file -f ${project}.out

if test ! -f "${project}.vimrc"; then
  touch ~/.vim/plugin/$project.vim
fi
echo "set tags+=$PROJECT_HOME/${project}.tags" > ~/.vim/plugin/$project.vim
echo "cs add $PROJECT_HOME/${project}.out" >> ~/.vim/plugin/$project.vim

